= Hacking \Sanzang

== Supported platforms

These programs should work on all platforms with Ruby 1.9 or later. Regular
testing takes place on GNU/Linux operating systems. \Sanzang has not been fully
tested on other implementations of Ruby (e.g. JRuby, Rubinius, etc.).

== Languages and scope

The translation program may not be very useful for all languages. It was
designed specifically for dealing with the more difficult aspects of
translating from ancient Chinese. For a language like Sanskrit or Tibetan, it
may not be so useful.

== Multiprocessing and fork(2)

Most every Unix-like system supports the fork(2) system call and therefore has
the potential to run \Sanzang in a multiprocessing mode for batches. However,
each Ruby implementation and port may be different, and \Sanzang will check to
see if the fork method has been implemented before attempting to utilize
multiprocessing. To avoid potential errors, the translator will not attempt to
use multiprocessing on platforms in which fork(2) is not implemented.

Note that for Windows, the Cygwin port of Ruby does implement does support
fork(2) perfectly, so Ruby 1.9+ on Cygwin can utilize the fork method, so
it supports standard multiprocessing. Therefore, Cygwin is the most robust
environment for running \Sanzang on a computer with Windows.

== Text encoding quirks

Converters for several encodings have not yet been implemented by YARV. Most of
these are obscure and not widely used. Perhaps the most notable is EUC-TW,
which is an old Unix encoding for traditional Chinese. Text encodings that
cannot be converted to and from UTF-8 are not currently supported.
